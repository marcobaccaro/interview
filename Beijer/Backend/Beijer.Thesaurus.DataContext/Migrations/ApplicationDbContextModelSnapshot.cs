// <auto-generated />
using Beijer.Thesaurus.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Beijer.Thesaurus.DataContext.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Beijer.Thesaurus.Domain.Synonym", b =>
                {
                    b.Property<long>("WordId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SynonymWordId")
                        .HasColumnType("INTEGER");

                    b.HasKey("WordId", "SynonymWordId");

                    b.HasIndex("SynonymWordId");

                    b.ToTable("Synonyms", "dbo");
                });

            modelBuilder.Entity("Beijer.Thesaurus.Domain.Word", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Language")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Content");

                    b.ToTable("Words", "dbo");
                });

            modelBuilder.Entity("Beijer.Thesaurus.Domain.Synonym", b =>
                {
                    b.HasOne("Beijer.Thesaurus.Domain.Word", "SynonymWord")
                        .WithMany("SynonymOf")
                        .HasForeignKey("SynonymWordId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Beijer.Thesaurus.Domain.Word", "Word")
                        .WithMany("Synonyms")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SynonymWord");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("Beijer.Thesaurus.Domain.Word", b =>
                {
                    b.Navigation("SynonymOf");

                    b.Navigation("Synonyms");
                });
#pragma warning restore 612, 618
        }
    }
}
